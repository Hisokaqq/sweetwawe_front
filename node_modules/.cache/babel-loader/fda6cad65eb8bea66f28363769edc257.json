{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandrburtyn/Desktop/music/frontend/src/components/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faAngleLeft, faAngleRight, faPause, faHeart, faRepeat } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = _ref => {\n  _s();\n\n  let {\n    libraryStatus,\n    currentSong,\n    isplaying,\n    setIsplaying,\n    audioRef,\n    songs,\n    setCurrentSong,\n    setSongs\n  } = _ref;\n  const [color, setColor] = useState([\"#EF8EA9\", \"#ab417f\"]);\n  const [isLiked, setIsLiked] = useState(false);\n  const [onRepeat, setOnRepeat] = useState(false);\n\n  const playSongHandler = () => {\n    if (isplaying) {\n      audioRef.current.pause();\n      setIsplaying(!isplaying);\n    } else {\n      audioRef.current.play();\n      setIsplaying(!isplaying);\n    }\n  };\n\n  const [songInfo, setSonfInfo] = useState({\n    currentTime: null,\n    duration: null,\n    animationPercentage: 0\n  });\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animationPercentage = Math.round(roundedCurrent / roundedDuration * 100);\n    setSonfInfo({ ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPercentage\n    });\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    setSonfInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n    audioRef.current.currentTime = e.target.value;\n  };\n\n  const skipTrackHandler = direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === \"skip-forward\") {\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        currentIndex = songs.length;\n      }\n\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n  };\n\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n    background: \"rgb(204, 204, 204)\",\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    padding: \"1rem\",\n    pointerEvents: \"none\"\n  };\n  useEffect(() => {\n    const newSongs = songs.map(song => {\n      if (song.id === currentSong.id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]);\n\n  if (isplaying) {\n    const playPromise = audioRef.current.play();\n\n    if (playPromise !== undefined) {\n      playPromise.then(audio => {\n        audioRef.current.play();\n      });\n    }\n  }\n\n  const songEndHandler = async () => {\n    let currentIndex = await songs.findIndex(song => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    const playPromise = await audioRef.current.play();\n\n    if (playPromise !== undefined) {\n      playPromise.then(audio => {\n        audioRef.current.play();\n      });\n    }\n  };\n\n  const onRepeatHandler = () => {\n    setOnRepeat(!onRepeat);\n  };\n\n  useEffect(() => {\n    if (-songInfo.currentTime + songInfo.duration < 0.0138 && songInfo.duration != 0 && songInfo.duration != null) {\n      songEndHandler();\n    }\n  }, [songInfo.currentTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `player ${libraryStatus && \"library-active\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        style: {\n          background: `linear-gradient(to right, ${color[0]}, ${color[1]})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"ts\",\n          onChange: dragHandler,\n          min: 0,\n          max: songInfo.duration ? songInfo.duration : \"\",\n          value: songInfo.currentTime ? songInfo.currentTime : 0,\n          type: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackAnim,\n          className: \"animate-track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", `${songInfo.duration ? getTime(songInfo.duration) : \"\"}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: onRepeatHandler,\n        icon: faRepeat,\n        size: \"2x\",\n        className: `repeat ${onRepeat && \"repeat-anim\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler(\"skip-back\"),\n        className: \"skip-back contr-btn\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play contr-btn\",\n        size: \"2x\",\n        icon: isplaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler(\"skip-forward\"),\n        className: \"skip-forward contr-btn\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        size: \"2x\",\n        icon: faHeart,\n        onClick: () => setIsLiked(!isLiked),\n        className: `heart ${isLiked && \"heart-anim\"} `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onLoadedMetadata: timeUpdateHandler,\n      onTimeUpdate: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Player, \"Yaj/qnF95aKvb34q80BL9vV9Wuo=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","faPause","faHeart","faRepeat","Player","libraryStatus","currentSong","isplaying","setIsplaying","audioRef","songs","setCurrentSong","setSongs","color","setColor","isLiked","setIsLiked","onRepeat","setOnRepeat","playSongHandler","current","pause","play","songInfo","setSonfInfo","currentTime","duration","animationPercentage","timeUpdateHandler","e","target","roundedCurrent","Math","round","roundedDuration","getTime","time","floor","slice","dragHandler","value","skipTrackHandler","direction","currentIndex","findIndex","song","id","length","trackAnim","transform","background","width","height","position","top","left","padding","pointerEvents","newSongs","map","active","playPromise","undefined","then","audio","songEndHandler","onRepeatHandler"],"sources":["/Users/oleksandrburtyn/Desktop/music/frontend/src/components/Player.js"],"sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faPlay, faAngleLeft, faAngleRight, faPause, faHeart, faRepeat} from \"@fortawesome/free-solid-svg-icons\"\nconst Player = ({libraryStatus,currentSong, isplaying, setIsplaying, audioRef, songs, setCurrentSong, setSongs}) => {\n    const [color, setColor] = useState([\"#EF8EA9\", \"#ab417f\"])\n    const [isLiked, setIsLiked] = useState(false)\n    const [onRepeat, setOnRepeat] = useState(false)\n    const playSongHandler = () =>{\n        if(isplaying){\n            audioRef.current.pause()\n            setIsplaying(!isplaying) \n        }\n        else{\n            audioRef.current.play()\n            setIsplaying(!isplaying) \n        }\n        \n    }\n    const [songInfo, setSonfInfo] = useState({\n        currentTime: null,\n        duration: null,\n        animationPercentage: 0,\n    })\n    const timeUpdateHandler = (e) => {\n        const current = e.target.currentTime\n        const duration = e.target.duration\n        const roundedCurrent = Math.round(current)\n        const roundedDuration = Math.round(duration)\n        const animationPercentage = Math.round(roundedCurrent/roundedDuration * 100)\n        setSonfInfo({...songInfo, currentTime:current, duration:duration, animationPercentage})\n    }\n    const getTime = (time) =>{\n            return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time%60)).slice(-2)\n        \n    }\n    const dragHandler = (e) => {\n        setSonfInfo({...songInfo, currentTime: e.target.value})\n        audioRef.current.currentTime = e.target.value\n    }\n    const skipTrackHandler = (direction) => {\n        let currentIndex = songs.findIndex((song)=>song.id === currentSong.id)\n        if(direction ===\"skip-forward\"){\n            setCurrentSong(songs[(currentIndex+1)%songs.length])\n        }\n        if(direction ===\"skip-back\"){\n            if((currentIndex-1)%songs.length ===-1){\n                currentIndex = songs.length\n            }\n            setCurrentSong(songs[(currentIndex-1)%songs.length])\n        }\n    }\n    const trackAnim = {\n        transform: `translateX(${songInfo.animationPercentage}%)`,\n        background: \"rgb(204, 204, 204)\",\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        padding: \"1rem\",\n        pointerEvents: \"none\",\n    }\n    useEffect(()=>{\n        \n        const newSongs = songs.map((song) => {\n            if (song.id === currentSong.id) {\n              return {\n                ...song,\n                active: true,\n              };\n            } else {\n              return {\n                ...song,\n                active: false,\n              };\n            }\n          });\n          setSongs(newSongs);\n    },[currentSong])\n    if(isplaying){\n        const playPromise = audioRef.current.play()\n        if(playPromise !==undefined){\n            playPromise.then((audio) => {\n                audioRef.current.play()\n            })\n        }\n    }\n    const songEndHandler = async () => {\n        let currentIndex = await songs.findIndex((song)=>song.id === currentSong.id)\n        await setCurrentSong(songs[(currentIndex+1)%songs.length])\n        const playPromise = await audioRef.current.play()\n        if(playPromise !==undefined){\n            playPromise.then((audio) => {\n                audioRef.current.play()\n            })\n        }\n    }\n    const onRepeatHandler = () => {\n        setOnRepeat(!onRepeat)\n    }\n    useEffect(()=>{\n        if (-(songInfo.currentTime) + (songInfo.duration) < 0.0138 && songInfo.duration !=0 && songInfo.duration!=null){\n            songEndHandler()\n        }\n    }, [songInfo.currentTime,])\n  return (\n    <div className={`player ${libraryStatus && \"library-active\"}`}>\n        <div className='time-control'>\n            <p>{getTime(songInfo.currentTime)}</p>\n            <div className=\"track\" style={{background:`linear-gradient(to right, ${color[0]}, ${color[1]})`}}>\n            <input className='ts' onChange={dragHandler} min={0} max={songInfo.duration ? songInfo.duration : \"\"} value={songInfo.currentTime ? songInfo.currentTime : 0} type=\"range\"/>\n            <div style={trackAnim} className=\"animate-track\">\n            </div>\n            </div>\n            <p> {`${songInfo.duration ? getTime(songInfo.duration) : \"\"}`}</p>\n            \n            \n        </div>\n        <div className=\"play-control\">\n            <FontAwesomeIcon onClick={onRepeatHandler} icon={faRepeat} size=\"2x\" className={`repeat ${onRepeat && \"repeat-anim\"}`}/>\n            <FontAwesomeIcon onClick={()=>skipTrackHandler(\"skip-back\")} className='skip-back contr-btn' size='2x' icon={faAngleLeft} />\n            <FontAwesomeIcon onClick={playSongHandler} className='play contr-btn' size='2x' icon={isplaying ? faPause : faPlay} />\n            <FontAwesomeIcon onClick={()=>skipTrackHandler(\"skip-forward\")} className='skip-forward contr-btn' size='2x' icon={faAngleRight} />\n            <FontAwesomeIcon size='2x' icon={ faHeart} onClick={()=>setIsLiked(!isLiked)}  className={`heart ${isLiked && \"heart-anim\" } `}/>\n        </div>\n        <audio onLoadedMetadata={timeUpdateHandler} onTimeUpdate={timeUpdateHandler} ref={audioRef} src={currentSong.audio} ></audio>\n    </div>\n  )\n}\n\nexport default Player"],"mappings":"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"},"metadata":{},"sourceType":"module"}