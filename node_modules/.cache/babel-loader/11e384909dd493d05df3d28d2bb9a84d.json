{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandrburtyn/Desktop/music/frontend/src/components/LibrarySong.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = _ref => {\n  _s();\n\n  let {\n    song,\n    setCurrentSong,\n    songs,\n    audioRef,\n    isplaying,\n    id\n  } = _ref;\n  const dispatch = useDispatch();\n  const songDetails = useSelector(state => state.songDetails);\n  let {\n    currentSong\n  } = songDetails;\n\n  const fetchSong = async idd => {\n    await dispatch(listSongDetails(idd));\n  };\n\n  const songSelectHandler = () => {\n    const selectedSong = songs.find(state => state._id === song._id);\n    setCurrentSong(selectedSong);\n    const newSongs = songs.map(song => {\n      if (song._id === id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    songs = newSongs;\n\n    if (isplaying) {\n      const playPromise = audioRef.current.play();\n\n      if (playPromise !== undefined) {\n        playPromise.then(audio => {\n          audioRef.current.play();\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `library-song ${song.active ? \"selected\" : \"l\"}`,\n    onClick: songSelectHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LibrarySong, \"n7hhVg7j2/24uAU7rLCoeW+yigA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"names":["React","useSelector","useDispatch","LibrarySong","song","setCurrentSong","songs","audioRef","isplaying","id","dispatch","songDetails","state","currentSong","fetchSong","idd","listSongDetails","songSelectHandler","selectedSong","find","_id","newSongs","map","active","playPromise","current","play","undefined","then","audio","cover","name","artist"],"sources":["/Users/oleksandrburtyn/Desktop/music/frontend/src/components/LibrarySong.js"],"sourcesContent":["import React  from 'react'\nimport { useSelector, useDispatch} from \"react-redux\"\nconst LibrarySong = ({song,setCurrentSong,songs, audioRef, isplaying, id}) => {\n  const dispatch = useDispatch()\n    const songDetails = useSelector(state => state.songDetails)\n    let {currentSong} = songDetails\n    const fetchSong =  async (idd) => {\n          await dispatch(listSongDetails(idd))\n    }\n    const songSelectHandler = () => {\n        const selectedSong = songs.find(state=>state._id ===song._id)\n        \n        setCurrentSong(selectedSong)\n        const newSongs = songs.map((song) => {\n            if (song._id === id) {\n              return {\n                ...song,\n                active: true,\n              };\n            } else {\n              return {\n                ...song,\n                active: false,\n              };\n            }\n          });\n          songs = (newSongs);\n        if(isplaying){\n            const playPromise = audioRef.current.play()\n            if(playPromise !==undefined){\n                playPromise.then((audio) => {\n                    audioRef.current.play()\n                })\n            }\n        }\n    }\n  return (\n    <div className={`library-song ${song.active ? \"selected\" : \"l\"}`} onClick={songSelectHandler}>\n        <img src={song.cover} alt={song.name} />\n        <div className=\"song-description\"><h3>{song.name}</h3>\n        <h4>{song.artist}</h4></div>\n        \n    </div>\n  )\n}\n\nexport default LibrarySong"],"mappings":";;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;;;AACA,MAAMC,WAAW,GAAG,QAA0D;EAAA;;EAAA,IAAzD;IAACC,IAAD;IAAMC,cAAN;IAAqBC,KAArB;IAA4BC,QAA5B;IAAsCC,SAAtC;IAAiDC;EAAjD,CAAyD;EAC5E,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACE,MAAMS,WAAW,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B;EACA,IAAI;IAACE;EAAD,IAAgBF,WAApB;;EACA,MAAMG,SAAS,GAAI,MAAOC,GAAP,IAAe;IAC5B,MAAML,QAAQ,CAACM,eAAe,CAACD,GAAD,CAAhB,CAAd;EACL,CAFD;;EAGA,MAAME,iBAAiB,GAAG,MAAM;IAC5B,MAAMC,YAAY,GAAGZ,KAAK,CAACa,IAAN,CAAWP,KAAK,IAAEA,KAAK,CAACQ,GAAN,KAAahB,IAAI,CAACgB,GAApC,CAArB;IAEAf,cAAc,CAACa,YAAD,CAAd;IACA,MAAMG,QAAQ,GAAGf,KAAK,CAACgB,GAAN,CAAWlB,IAAD,IAAU;MACjC,IAAIA,IAAI,CAACgB,GAAL,KAAaX,EAAjB,EAAqB;QACnB,OAAO,EACL,GAAGL,IADE;UAELmB,MAAM,EAAE;QAFH,CAAP;MAID,CALD,MAKO;QACL,OAAO,EACL,GAAGnB,IADE;UAELmB,MAAM,EAAE;QAFH,CAAP;MAID;IACF,CAZc,CAAjB;IAaEjB,KAAK,GAAIe,QAAT;;IACF,IAAGb,SAAH,EAAa;MACT,MAAMgB,WAAW,GAAGjB,QAAQ,CAACkB,OAAT,CAAiBC,IAAjB,EAApB;;MACA,IAAGF,WAAW,KAAIG,SAAlB,EAA4B;QACxBH,WAAW,CAACI,IAAZ,CAAkBC,KAAD,IAAW;UACxBtB,QAAQ,CAACkB,OAAT,CAAiBC,IAAjB;QACH,CAFD;MAGH;IACJ;EACJ,CA1BD;;EA2BF,oBACE;IAAK,SAAS,EAAG,gBAAetB,IAAI,CAACmB,MAAL,GAAc,UAAd,GAA2B,GAAI,EAA/D;IAAkE,OAAO,EAAEN,iBAA3E;IAAA,wBACI;MAAK,GAAG,EAAEb,IAAI,CAAC0B,KAAf;MAAsB,GAAG,EAAE1B,IAAI,CAAC2B;IAAhC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,kBAAf;MAAA,wBAAkC;QAAA,UAAK3B,IAAI,CAAC2B;MAAV;QAAA;QAAA;QAAA;MAAA,QAAlC,eACA;QAAA,UAAK3B,IAAI,CAAC4B;MAAV;QAAA;QAAA;QAAA;MAAA,QADA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CA1CD;;GAAM7B,W;UACaD,W,EACKD,W;;;KAFlBE,W;AA4CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}