{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandrburtyn/Desktop/music/frontend/src/components/LibrarySong.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = _ref => {\n  let {\n    song,\n    setCurrentSong,\n    songs,\n    audioRef,\n    isplaying\n  } = _ref;\n\n  const songSelectHandler = () => {\n    const selectedSong = songs.find(state => state.id === song.id);\n    setCurrentSong(selectedSong);\n\n    if (isplaying) {\n      const playPromise = audioRef.current.play();\n\n      if (playPromise !== undefined) {\n        playPromise.then(audio => {\n          audioRef.current.play();\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `library-song ${song.active ? \"selected\" : \"\"}`,\n    onClick: songSelectHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"names":["React","LibrarySong","song","setCurrentSong","songs","audioRef","isplaying","songSelectHandler","selectedSong","find","state","id","playPromise","current","play","undefined","then","audio","active","cover","name","artist"],"sources":["/Users/oleksandrburtyn/Desktop/music/frontend/src/components/LibrarySong.js"],"sourcesContent":["import React  from 'react'\n\nconst LibrarySong = ({song,setCurrentSong,songs, audioRef, isplaying, }) => {\n    const songSelectHandler = () => {\n        const selectedSong = songs.find(state=>state.id ===song.id)\n        \n        setCurrentSong(selectedSong)\n        if(isplaying){\n            const playPromise = audioRef.current.play()\n            if(playPromise !==undefined){\n                playPromise.then((audio) => {\n                    audioRef.current.play()\n                })\n            }\n        }\n    }\n  return (\n    <div className={`library-song ${song.active ? \"selected\" : \"\"}`} onClick={songSelectHandler}>\n        <img src={song.cover} alt={song.name} />\n        <div className=\"song-description\"><h3>{song.name}</h3>\n        <h4>{song.artist}</h4></div>\n        \n    </div>\n  )\n}\n\nexport default LibrarySong"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;;;AAEA,MAAMC,WAAW,GAAG,QAAwD;EAAA,IAAvD;IAACC,IAAD;IAAMC,cAAN;IAAqBC,KAArB;IAA4BC,QAA5B;IAAsCC;EAAtC,CAAuD;;EACxE,MAAMC,iBAAiB,GAAG,MAAM;IAC5B,MAAMC,YAAY,GAAGJ,KAAK,CAACK,IAAN,CAAWC,KAAK,IAAEA,KAAK,CAACC,EAAN,KAAYT,IAAI,CAACS,EAAnC,CAArB;IAEAR,cAAc,CAACK,YAAD,CAAd;;IACA,IAAGF,SAAH,EAAa;MACT,MAAMM,WAAW,GAAGP,QAAQ,CAACQ,OAAT,CAAiBC,IAAjB,EAApB;;MACA,IAAGF,WAAW,KAAIG,SAAlB,EAA4B;QACxBH,WAAW,CAACI,IAAZ,CAAkBC,KAAD,IAAW;UACxBZ,QAAQ,CAACQ,OAAT,CAAiBC,IAAjB;QACH,CAFD;MAGH;IACJ;EACJ,CAZD;;EAaF,oBACE;IAAK,SAAS,EAAG,gBAAeZ,IAAI,CAACgB,MAAL,GAAc,UAAd,GAA2B,EAAG,EAA9D;IAAiE,OAAO,EAAEX,iBAA1E;IAAA,wBACI;MAAK,GAAG,EAAEL,IAAI,CAACiB,KAAf;MAAsB,GAAG,EAAEjB,IAAI,CAACkB;IAAhC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,kBAAf;MAAA,wBAAkC;QAAA,UAAKlB,IAAI,CAACkB;MAAV;QAAA;QAAA;QAAA;MAAA,QAAlC,eACA;QAAA,UAAKlB,IAAI,CAACmB;MAAV;QAAA;QAAA;QAAA;MAAA,QADA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAtBD;;KAAMpB,W;AAwBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}