{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandrburtyn/Desktop/music/frontend/src/components/LibrarySong.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = _ref => {\n  let {\n    song,\n    setCurrentSong,\n    songs,\n    audioRef,\n    isplaying\n  } = _ref;\n\n  const songSelectHandler = () => {\n    const selectedSong = songs.find(state => state.id === song.id);\n    setCurrentSong(selectedSong);\n    audioRef.current.play();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"library-song\",\n    onClick: songSelectHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"names":["React","LibrarySong","song","setCurrentSong","songs","audioRef","isplaying","songSelectHandler","selectedSong","find","state","id","current","play","cover","name","artist"],"sources":["/Users/oleksandrburtyn/Desktop/music/frontend/src/components/LibrarySong.js"],"sourcesContent":["import React from 'react'\n\nconst LibrarySong = ({song,setCurrentSong,songs, audioRef, isplaying}) => {\n    const songSelectHandler = () => {\n        const selectedSong = songs.find(state=>state.id ===song.id)\n        setCurrentSong(selectedSong)\n        audioRef.current.play()\n    }\n  return (\n    <div className='library-song' onClick={songSelectHandler}>\n        <img src={song.cover} alt={song.name} />\n        <div className=\"song-description\"><h3>{song.name}</h3>\n        <h4>{song.artist}</h4></div>\n        \n    </div>\n  )\n}\n\nexport default LibrarySong"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,QAAsD;EAAA,IAArD;IAACC,IAAD;IAAMC,cAAN;IAAqBC,KAArB;IAA4BC,QAA5B;IAAsCC;EAAtC,CAAqD;;EACtE,MAAMC,iBAAiB,GAAG,MAAM;IAC5B,MAAMC,YAAY,GAAGJ,KAAK,CAACK,IAAN,CAAWC,KAAK,IAAEA,KAAK,CAACC,EAAN,KAAYT,IAAI,CAACS,EAAnC,CAArB;IACAR,cAAc,CAACK,YAAD,CAAd;IACAH,QAAQ,CAACO,OAAT,CAAiBC,IAAjB;EACH,CAJD;;EAKF,oBACE;IAAK,SAAS,EAAC,cAAf;IAA8B,OAAO,EAAEN,iBAAvC;IAAA,wBACI;MAAK,GAAG,EAAEL,IAAI,CAACY,KAAf;MAAsB,GAAG,EAAEZ,IAAI,CAACa;IAAhC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,kBAAf;MAAA,wBAAkC;QAAA,UAAKb,IAAI,CAACa;MAAV;QAAA;QAAA;QAAA;MAAA,QAAlC,eACA;QAAA,UAAKb,IAAI,CAACc;MAAV;QAAA;QAAA;QAAA;MAAA,QADA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAdD;;KAAMf,W;AAgBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}